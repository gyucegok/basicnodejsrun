steps:
# This step runs the unit tests on the app
- name: node
  id: Test
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      npm install && npm run start & > build.log

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'europe-west1-docker.pkg.dev/gyucegok-alto/dock/basicnodejs:${COMMIT_SHA}'
  - '.'

# This step pushes the image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'europe-west1-docker.pkg.dev/gyucegok-alto/dock/basicnodejs:${COMMIT_SHA}'

# We have pushed the container image with the GIT commit SHA, we also
# need to hydrate our kubernetes manifests with the same SHA in order being
# able to pull it in deploy time
- name: 'bash'
  args:
  - 'sed'
  - '-i'
  - './kubernetes-manifests/basicnodejsdeploy.yaml'
  - '-e'
  - 's/COMMITSHA/${COMMIT_SHA}/g'

# This step creates a release in Cloud Deploy, promoting the image 
# between environments will be done further in Cloud Deploy
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  entrypoint: gcloud
  args:
    [
      "deploy", "releases", "create", "rel-${SHORT_SHA}",
      "--delivery-pipeline", "nodejsgkepipe",
      "--region", "us-east1",
      "--annotations", "commitId=${REVISION_ID}",
      "--images", "basicnodejs=europe-west1-docker.pkg.dev/gyucegok-alto/dock/basicnodejs:${COMMIT_SHA}"
    ]